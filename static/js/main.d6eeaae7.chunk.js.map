{"version":3,"sources":["app/Game.js","components/square/Square.js","components/board/Board.js","assets/tic_tac_toe_3.png","shared/header/Header.js","index.js"],"names":["sqA","sqB","sqC","Square","props","id","className","onClick","value","Board","i","this","squares","numRows","numCols","boardSquares","row","rowSquares","col","push","renderSquare","map","index","square","getSquares","React","Component","winnerDeclared","winStep","intitialState","history","Array","fill","xIsNext","stepNumber","calculateWinner","lines","length","a","b","c","document","getElementById","toggleWinningClass","operBool","player","getElementsByClassName","classList","toggle","Game","state","stepNum","setState","slice","sq","concat","resetState","current","winner","moves","status","cta","step","move","desc","jumpTo","party","confetti","count","variation","range","zIndex","displayConfetti","every","element","handleClick","disabled","handleCta","Header","src","tic_tac_toe_3","alt","ReactDOM","render"],"mappings":"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","file":"static/js/main.d6eeaae7.chunk.js","sourcesContent":["// A game that:\n// Lets you play tic-tac-toe in both desktop-view and mobile-view(added later)\n// Indicates when a player has won the game or when draw occurs(added later),\n// Stores a game’s history as a game progresses,\n// Allows players to review a game’s history and see previous versions of a game’s board.\n// Highlights the three squares that caused the win.(added later)\n// Can be reset at any step.(added later)\n// Displays Confetti on winning.(added later)\n\nimport React from \"react\";\nimport party from \"party-js\";\nimport { Board } from \"../components/board/Board\";\nimport \"./Game.scss\";\n\n// Global Variables\nlet sqA, sqB, sqC;\nlet winnerDeclared = false;\nlet winStep = -1;\nconst intitialState = {\n    history: [\n        {\n            squares: Array(9).fill(null),\n        },\n    ],\n    xIsNext: true,\n    stepNumber: -1,\n}\n\n// Helper Functions\nconst calculateWinner = (squares) => {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            sqA = document.getElementById(a);\n            sqB = document.getElementById(b);\n            sqC = document.getElementById(c);\n            winnerDeclared = true;\n            toggleWinningClass(true);\n            return squares[a];\n        }\n    }\n    return null;\n}\nconst displayConfetti = () => {\n    let player = document.getElementsByClassName('status')[0];\n    for (let i = 0; i < 5; i++)\n        party.confetti(player, {\n            count: party.variation.range(20, 200),\n            zIndex: 99999,\n        });\n}\nconst toggleWinningClass = (operBool) => {\n    //operBool specifies whether to add or remove class\n    let player = document.getElementsByClassName('status')[0];\n    sqA.classList.toggle('winning-square', operBool);\n    sqB.classList.toggle('winning-square', operBool);\n    sqC.classList.toggle('winning-square', operBool);\n    player.classList.toggle('winning-square', operBool);\n}\nconst checkDraw = (squares) => squares.every((element) => element !== null);\n\nexport class Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = intitialState;\n    }\n    // Jump to a particular step\n    jumpTo(stepNum) {\n        // Remove Hightlight if junmp is to non-winning step\n        if (winStep !== -1) {\n            toggleWinningClass(stepNum === winStep);\n        }\n\n        this.setState({\n            stepNumber: stepNum,\n            xIsNext: stepNum % 2 === 0,\n        });\n    }\n\n    // handle click for ith square\n    handleClick(i) {\n        const { stepNumber} = this.state;\n        const history = this.state.history.slice(0, stepNumber === -1 ? 1 : stepNumber + 1);\n        const current = history[history.length - 1];\n        const sq = current.squares.slice();\n        if (calculateWinner(sq) || sq[i]) {\n            return;\n        }\n        sq[i] = this.state.xIsNext ? \"X\" : \"O\";\n        this.setState({\n            history: history.concat([\n                {\n                    squares: sq,\n                },\n            ]),\n            xIsNext: !this.state.xIsNext,\n            stepNumber: history.length,\n        });\n    }\n\n    // Reset to initial state\n    resetState() {\n        this.setState(intitialState);\n\n        // Remove HighLight if winner was declared\n        if (winnerDeclared) {\n            toggleWinningClass(false);\n            winnerDeclared = false;\n        }\n    }\n    handleCta() {\n        if (this.state.stepNumber === -1) {\n            this.setState({\n                stepNumber: 0,\n            });\n            return;\n        }\n        this.resetState();\n    }\n    render() {\n        const { history, xIsNext, stepNumber } = this.state;\n        let current, winner, moves, status, cta = 'Restart';\n        current = history[stepNumber === -1 ? 0 : stepNumber];\n\n        if (stepNumber === -1) {\n            status = 'Lets go!';\n            cta = 'Start';\n        }\n        else {\n            winner = calculateWinner(current.squares);\n            moves = history.map((step, move) => {\n                const desc = move ? \"Go to move #\" + move : \"Go to game start\";\n                return (\n                    <li key={move}>\n                        <button className={`button_slide slide_left ${move == stepNumber ? 'active' : \"\"}`} onClick={() => this.jumpTo(move)}>{desc}</button>\n                    </li>\n                );\n            });\n    \n            if (winner) {\n                winStep = stepNumber;\n                status = \"Winner: \" + winner;\n                displayConfetti();\n            } else if (checkDraw(current.squares)) {\n                status = \"Draw\";\n            } else {\n                status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n            }\n        }\n\n        return (\n            <>\n                <div className=\"game\">\n                    <div className='info'>\n                        <div className={`status ${stepNumber > -1 ? winner === 'X' || xIsNext ? 'isX' : 'isY' : ''}`}>\n                            <h1>{status}</h1>\n                        </div>\n                        <div className=\"game-board\">\n                            <Board\n                                squares={current.squares}\n                                onClick={(i) => {\n                                    this.handleClick(i);\n                                }}\n                            />\n                        </div>\n                        <div className=\"reset\">\n                            <button disabled={stepNumber === 0} className=\"button_slide slide_left\" onClick={() => this.handleCta()}>\n                                {cta}\n                            </button>\n                        </div>\n                        <div className=\"steps\">\n                            <ol>{moves}</ol>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\n","export const Square = (props) => {\n\treturn (\n\t\t<button  id = {props.id} className=\"square\" onClick={props.onClick}>\n\t\t\t{props.value}\n\t\t</button>\n\t);\n}","import React from \"react\";\nimport {Square} from \"../square/Square\"\nexport class Board extends React.Component {\n\trenderSquare(i) {\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tkey = {i}\n\t\t\t\tid = {i}\n\t\t\t\tvalue={this.props.squares[i]}\n\t\t\t\tonClick={() => this.props.onClick(i)}\n\t\t\t/>\n\t\t);\n\t}\n\tgetSquares(numRows, numCols) {\n\t\tlet boardSquares = [];\n\t\tfor (let row = 0; row < numRows; row++) {\n\t\t\tlet rowSquares = [];\n\t\t\tfor (let col = 0; col < numCols; col++) {\n\t\t\t\trowSquares.push(this.renderSquare(row * numRows + col));\n\t\t\t}\n\t\t\tboardSquares.push(rowSquares);\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{\n          boardSquares.map((row, index) => {\n            return (           \n              <div className=\"board-row\" key = {index}>{\n                  row.map((square) => square)\n                }\n              </div>);\n          })\n        }\n\t\t\t</>\n\t\t);\n\t}\n\trender() {\n\t\treturn this.getSquares(3, 3);\n\t\t// return (\n\t\t//   <div>\n\t\t//     <div className=\"board-row\">\n\t\t//       {this.renderSquare(0)}\n\t\t//       {this.renderSquare(1)}\n\t\t//       {this.renderSquare(2)}\n\t\t//     </div>\n\t\t//     <div className=\"board-row\">\n\t\t//       {this.renderSquare(3)}\n\t\t//       {this.renderSquare(4)}\n\t\t//       {this.renderSquare(5)}\n\t\t//     </div>\n\t\t//     <div className=\"board-row\">\n\t\t//       {this.renderSquare(6)}\n\t\t//       {this.renderSquare(7)}\n\t\t//       {this.renderSquare(8)}\n\t\t//     </div>\n\t\t//   </div>\n\t\t// );\n\t}\n}","export default __webpack_public_path__ + \"static/media/tic_tac_toe_3.e541006a.png\";","import React from \"react\";\nimport tic_tac_toe_3 from \"../../assets/tic_tac_toe_3.png\";\nimport \"./Header.scss\";\nexport const Header = () => {\n    return (\n        <div className=\"header\">\n            <div className = \"header-content\">\n                <h1>Welcome to Mutahar's Online Tic Tac Toe Arena</h1>\n            </div>\n            <div className = \"header-logo\">\n                <img src={tic_tac_toe_3} className=\"logo\" alt = \"logo\"/>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {Game} from \"./app/Game\";\nimport {Header} from \"./shared/header/Header\";\n\n\nReactDOM.render(\n\t<>\n\t\t<Header/>\n\t\t<Game />\n\t</>, \n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}